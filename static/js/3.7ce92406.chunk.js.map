{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","posts","profilePage","newPostText","dispatch","addPost","addPostActionCreator","postsElements","map","p","postsBlock","values","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7ce92406.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2zCTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1sMRR\",\"posts\":\"MyPosts_posts__2bzSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__29av9\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://www.meme-arsenal.com/memes/87d4bfeed251dba0ce946e9e594dbdb6.jpg' alt='avatar' />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport { Post } from \"./Post/Post\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nexport const MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts\r\n    .map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field \r\n          component={Textarea} \r\n          name='newPostText'\r\n          placeholder='Enter your message'\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { MyPosts } from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevStatus) {\r\n      if (prevProps.status !== this.props.status) {\r\n        this.setState({\r\n          status: this.props.status\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default tatus;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport { ProfileStatus } from \"./ProfileStatus\";\r\nimport { ProfileStatusWithHooks } from \"./ProfileStatusWithHooks\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return <div>\r\n    <div>\r\n      {/* <img\r\n        src=\"https://klike.net/uploads/posts/2019-01/1547622229_14.jpg\"\r\n        alt=\"nature\"\r\n      /> */}\r\n    </div>\r\n    <div className={s.descriptionBlock}>\r\n      <img src={props.profile.photos.large} alt='ava'/>\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n    </div>\r\n  </div>\r\n}","import React from \"react\"; \r\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\n\r\nexport const Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { Profile } from \"./Profile\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}