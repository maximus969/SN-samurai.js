{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsRedirect","state","isAuth","auth","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","compose","connect","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","Component","RedirectComponent","this","React","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iICG9KC,EAA0B,SAACC,GAAD,MAAY,CACxCC,OAAQD,EAAME,KAAKD,S,mCCDRE,EAAa,SAACC,GACzB,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,UCJrCC,EAAU,SAACR,GACtB,OACE,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,iCCIhCC,EAAeC,YAAiB,KA+ChCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACM,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAY,yBAEd,8BACE,kDC9BGC,sBACbC,aAfsB,SAAC5B,GACvB,MAAO,CACL6B,YAAa7B,EAAM6B,gBAII,SAACC,GAC1B,MAAO,CACLC,YAAa,SAACC,GACZF,EAASG,YAAmBD,UJPF,SAACE,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKhC,MAAMH,OACT,cAACiC,EAAD,eAAeE,KAAKhC,QADI,cAAC,IAAD,CAAUK,GAAG,eAHH,GACb4B,IAAMH,WAStC,OAFqCN,YAAQ7B,EAAR6B,CAAiCO,KIIzDR,EDTQ,SAACvB,GAEtB,IAAIJ,EAAQI,EAAMyB,YAEdS,EAAkBtC,EAAMuC,QACzBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY9B,KAAM8B,EAAE9B,KAAMD,GAAI+B,EAAE/B,QAExCgC,EAAmB1C,EAAM2C,SAC1BH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,aAMhC,OAAKT,EAAMH,OAGT,sBAAKI,UAAWC,IAAEiC,QAAlB,UACE,qBAAKlC,UAAWC,IAAEuC,aAAlB,SACGP,IAEH,sBAAKjC,UAAWC,IAAEqC,SAAlB,UACE,8BAAMD,IACN,cAAC1B,EAAD,CAAqBG,SAbP,SAAC2B,GACnB1C,EAAM2B,YAAYe,EAAOd,yBAGD,cAAC,IAAD,CAAUvB,GAAG","file":"static/js/4.e615aefd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__LXwWK\",\"dialogsItems\":\"Dialogs_dialogsItems__1_XNc\",\"active\":\"Dialogs_active__FqBHy\",\"messages\":\"Dialogs_messages__3Gcjc\",\"message\":\"Dialogs_message__37A2J\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n};\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from '.././Dialogs.module.css'\r\n\r\nexport const DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from '.././Dialogs.module.css'\r\n\r\nexport const Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { DialogItem } from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport { Message } from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs\r\n    .map(d => <DialogItem name={d.name} id={d.id} />)\r\n\r\n  let messagesElements = state.messages\r\n    .map(m => <Message message={m.message} />)\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={Textarea}\r\n            validate={[required, maxLength100]} \r\n            name={'newMessageBody'} \r\n            placeholder='Enter your message' />\r\n          </div>\r\n          <div>\r\n            <button>Save</button>\r\n          </div>\r\n        </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport { Dialogs } from './Dialogs'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}